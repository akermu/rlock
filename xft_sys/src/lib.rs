#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]

extern crate libc;
extern crate x11;
extern crate fontconfig_sys;
extern crate freetype_sys;

use x11::xlib::*;
use x11::xrender::*;
use fontconfig_sys::*;
use freetype_sys::*;


/* automatically generated by rust-bindgen */

pub enum Struct__XftFontInfo { }
pub type XftFontInfo = Struct__XftFontInfo;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftFont {
    pub ascent: ::libc::c_int,
    pub descent: ::libc::c_int,
    pub height: ::libc::c_int,
    pub max_advance_width: ::libc::c_int,
    pub charset: *mut FcCharSet,
    pub pattern: *mut FcPattern,
}
impl ::std::clone::Clone for Struct__XftFont {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftFont {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftFont = Struct__XftFont;
pub enum Struct__XftDraw { }
pub type XftDraw = Struct__XftDraw;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftColor {
    pub pixel: ::libc::c_ulong,
    pub color: XRenderColor,
}
impl ::std::clone::Clone for Struct__XftColor {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftColor {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftColor = Struct__XftColor;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftCharSpec {
    pub ucs4: FcChar32,
    pub x: ::libc::c_short,
    pub y: ::libc::c_short,
}
impl ::std::clone::Clone for Struct__XftCharSpec {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftCharSpec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftCharSpec = Struct__XftCharSpec;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftCharFontSpec {
    pub font: *mut XftFont,
    pub ucs4: FcChar32,
    pub x: ::libc::c_short,
    pub y: ::libc::c_short,
}
impl ::std::clone::Clone for Struct__XftCharFontSpec {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftCharFontSpec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftCharFontSpec = Struct__XftCharFontSpec;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftGlyphSpec {
    pub glyph: FT_UInt,
    pub x: ::libc::c_short,
    pub y: ::libc::c_short,
}
impl ::std::clone::Clone for Struct__XftGlyphSpec {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftGlyphSpec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftGlyphSpec = Struct__XftGlyphSpec;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__XftGlyphFontSpec {
    pub font: *mut XftFont,
    pub glyph: FT_UInt,
    pub x: ::libc::c_short,
    pub y: ::libc::c_short,
}
impl ::std::clone::Clone for Struct__XftGlyphFontSpec {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct__XftGlyphFontSpec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XftGlyphFontSpec = Struct__XftGlyphFontSpec;
extern "C" {
    pub static mut _XftFTlibrary: FT_Library;
}
extern "C" {
    pub fn XftColorAllocName(dpy: *mut Display, visual: *const Visual,
                             cmap: Colormap, name: *const ::libc::c_char,
                             result: *mut XftColor) -> ::libc::c_int;
    pub fn XftColorAllocValue(dpy: *mut Display, visual: *mut Visual,
                              cmap: Colormap, color: *const XRenderColor,
                              result: *mut XftColor) -> ::libc::c_int;
    pub fn XftColorFree(dpy: *mut Display, visual: *mut Visual,
                        cmap: Colormap, color: *mut XftColor) -> ();
    pub fn XftDefaultHasRender(dpy: *mut Display) -> ::libc::c_int;
    pub fn XftDefaultSet(dpy: *mut Display, defaults: *mut FcPattern)
     -> ::libc::c_int;
    pub fn XftDefaultSubstitute(dpy: *mut Display, screen: ::libc::c_int,
                                pattern: *mut FcPattern) -> ();
    pub fn XftDrawCreate(dpy: *mut Display, drawable: Drawable,
                         visual: *mut Visual, colormap: Colormap)
     -> *mut XftDraw;
    pub fn XftDrawCreateBitmap(dpy: *mut Display, bitmap: Pixmap)
     -> *mut XftDraw;
    pub fn XftDrawCreateAlpha(dpy: *mut Display, pixmap: Pixmap,
                              depth: ::libc::c_int) -> *mut XftDraw;
    pub fn XftDrawChange(draw: *mut XftDraw, drawable: Drawable) -> ();
    pub fn XftDrawDisplay(draw: *mut XftDraw) -> *mut Display;
    pub fn XftDrawDrawable(draw: *mut XftDraw) -> Drawable;
    pub fn XftDrawColormap(draw: *mut XftDraw) -> Colormap;
    pub fn XftDrawVisual(draw: *mut XftDraw) -> *mut Visual;
    pub fn XftDrawDestroy(draw: *mut XftDraw) -> ();
    pub fn XftDrawPicture(draw: *mut XftDraw) -> Picture;
    pub fn XftDrawSrcPicture(draw: *mut XftDraw, color: *const XftColor)
     -> Picture;
    pub fn XftDrawGlyphs(draw: *mut XftDraw, color: *const XftColor,
                         _pub: *mut XftFont, x: ::libc::c_int,
                         y: ::libc::c_int, glyphs: *const FT_UInt,
                         nglyphs: ::libc::c_int) -> ();
    pub fn XftDrawString8(draw: *mut XftDraw, color: *const XftColor,
                          _pub: *mut XftFont, x: ::libc::c_int,
                          y: ::libc::c_int, string: *const FcChar8,
                          len: ::libc::c_int) -> ();
    pub fn XftDrawString16(draw: *mut XftDraw, color: *const XftColor,
                           _pub: *mut XftFont, x: ::libc::c_int,
                           y: ::libc::c_int, string: *const FcChar16,
                           len: ::libc::c_int) -> ();
    pub fn XftDrawString32(draw: *mut XftDraw, color: *const XftColor,
                           _pub: *mut XftFont, x: ::libc::c_int,
                           y: ::libc::c_int, string: *const FcChar32,
                           len: ::libc::c_int) -> ();
    pub fn XftDrawStringUtf8(draw: *mut XftDraw, color: *const XftColor,
                             _pub: *mut XftFont, x: ::libc::c_int,
                             y: ::libc::c_int, string: *const FcChar8,
                             len: ::libc::c_int) -> ();
    pub fn XftDrawStringUtf16(draw: *mut XftDraw, color: *const XftColor,
                              _pub: *mut XftFont, x: ::libc::c_int,
                              y: ::libc::c_int, string: *const FcChar8,
                              endian: FcEndian, len: ::libc::c_int) -> ();
    pub fn XftDrawCharSpec(draw: *mut XftDraw, color: *const XftColor,
                           _pub: *mut XftFont, chars: *const XftCharSpec,
                           len: ::libc::c_int) -> ();
    pub fn XftDrawCharFontSpec(draw: *mut XftDraw, color: *const XftColor,
                               chars: *const XftCharFontSpec,
                               len: ::libc::c_int) -> ();
    pub fn XftDrawGlyphSpec(draw: *mut XftDraw, color: *const XftColor,
                            _pub: *mut XftFont, glyphs: *const XftGlyphSpec,
                            len: ::libc::c_int) -> ();
    pub fn XftDrawGlyphFontSpec(draw: *mut XftDraw, color: *const XftColor,
                                glyphs: *const XftGlyphFontSpec,
                                len: ::libc::c_int) -> ();
    pub fn XftDrawRect(draw: *mut XftDraw, color: *const XftColor,
                       x: ::libc::c_int, y: ::libc::c_int,
                       width: ::libc::c_uint, height: ::libc::c_uint) -> ();
    pub fn XftDrawSetClip(draw: *mut XftDraw, r: Region) -> ::libc::c_int;
    pub fn XftDrawSetClipRectangles(draw: *mut XftDraw,
                                    xOrigin: ::libc::c_int,
                                    yOrigin: ::libc::c_int,
                                    rects: *const XRectangle,
                                    n: ::libc::c_int) -> ::libc::c_int;
    pub fn XftDrawSetSubwindowMode(draw: *mut XftDraw, mode: ::libc::c_int)
     -> ();
    pub fn XftGlyphExtents(dpy: *mut Display, _pub: *mut XftFont,
                           glyphs: *const FT_UInt, nglyphs: ::libc::c_int,
                           extents: *mut XGlyphInfo) -> ();
    pub fn XftTextExtents8(dpy: *mut Display, _pub: *mut XftFont,
                           string: *const FcChar8, len: ::libc::c_int,
                           extents: *mut XGlyphInfo) -> ();
    pub fn XftTextExtents16(dpy: *mut Display, _pub: *mut XftFont,
                            string: *const FcChar16, len: ::libc::c_int,
                            extents: *mut XGlyphInfo) -> ();
    pub fn XftTextExtents32(dpy: *mut Display, _pub: *mut XftFont,
                            string: *const FcChar32, len: ::libc::c_int,
                            extents: *mut XGlyphInfo) -> ();
    pub fn XftTextExtentsUtf8(dpy: *mut Display, _pub: *mut XftFont,
                              string: *const FcChar8, len: ::libc::c_int,
                              extents: *mut XGlyphInfo) -> ();
    pub fn XftTextExtentsUtf16(dpy: *mut Display, _pub: *mut XftFont,
                               string: *const FcChar8, endian: FcEndian,
                               len: ::libc::c_int, extents: *mut XGlyphInfo)
     -> ();
    pub fn XftFontMatch(dpy: *mut Display, screen: ::libc::c_int,
                        pattern: *const FcPattern, result: *mut FcResult)
     -> *mut FcPattern;
    pub fn XftFontOpen(dpy: *mut Display, screen: ::libc::c_int, ...)
     -> *mut XftFont;
    pub fn XftFontOpenName(dpy: *mut Display, screen: ::libc::c_int,
                           name: *const ::libc::c_char) -> *mut XftFont;
    pub fn XftFontOpenXlfd(dpy: *mut Display, screen: ::libc::c_int,
                           xlfd: *const ::libc::c_char) -> *mut XftFont;
    pub fn XftLockFace(_pub: *mut XftFont) -> FT_Face;
    pub fn XftUnlockFace(_pub: *mut XftFont) -> ();
    pub fn XftFontInfoCreate(dpy: *mut Display, pattern: *const FcPattern)
     -> *mut XftFontInfo;
    pub fn XftFontInfoDestroy(dpy: *mut Display, fi: *mut XftFontInfo) -> ();
    pub fn XftFontInfoHash(fi: *const XftFontInfo) -> FcChar32;
    pub fn XftFontInfoEqual(a: *const XftFontInfo, b: *const XftFontInfo)
     -> FcBool;
    pub fn XftFontOpenInfo(dpy: *mut Display, pattern: *mut FcPattern,
                           fi: *mut XftFontInfo) -> *mut XftFont;
    pub fn XftFontOpenPattern(dpy: *mut Display, pattern: *mut FcPattern)
     -> *mut XftFont;
    pub fn XftFontCopy(dpy: *mut Display, _pub: *mut XftFont) -> *mut XftFont;
    pub fn XftFontClose(dpy: *mut Display, _pub: *mut XftFont) -> ();
    pub fn XftInitFtLibrary() -> FcBool;
    pub fn XftFontLoadGlyphs(dpy: *mut Display, _pub: *mut XftFont,
                             need_bitmaps: FcBool, glyphs: *const FT_UInt,
                             nglyph: ::libc::c_int) -> ();
    pub fn XftFontUnloadGlyphs(dpy: *mut Display, _pub: *mut XftFont,
                               glyphs: *const FT_UInt, nglyph: ::libc::c_int)
     -> ();
    pub fn XftFontCheckGlyph(dpy: *mut Display, _pub: *mut XftFont,
                             need_bitmaps: FcBool, glyph: FT_UInt,
                             missing: *mut FT_UInt,
                             nmissing: *mut ::libc::c_int) -> FcBool;
    pub fn XftCharExists(dpy: *mut Display, _pub: *mut XftFont,
                         ucs4: FcChar32) -> FcBool;
    pub fn XftCharIndex(dpy: *mut Display, _pub: *mut XftFont, ucs4: FcChar32)
     -> FT_UInt;
    pub fn XftInit(config: *const ::libc::c_char) -> FcBool;
    pub fn XftGetVersion() -> ::libc::c_int;
    pub fn XftListFonts(dpy: *mut Display, screen: ::libc::c_int, ...)
     -> *mut FcFontSet;
    pub fn XftNameParse(name: *const ::libc::c_char) -> *mut FcPattern;
    pub fn XftGlyphRender(dpy: *mut Display, op: ::libc::c_int, src: Picture,
                          _pub: *mut XftFont, dst: Picture,
                          srcx: ::libc::c_int, srcy: ::libc::c_int,
                          x: ::libc::c_int, y: ::libc::c_int,
                          glyphs: *const FT_UInt, nglyphs: ::libc::c_int)
     -> ();
    pub fn XftGlyphSpecRender(dpy: *mut Display, op: ::libc::c_int,
                              src: Picture, _pub: *mut XftFont, dst: Picture,
                              srcx: ::libc::c_int, srcy: ::libc::c_int,
                              glyphs: *const XftGlyphSpec,
                              nglyphs: ::libc::c_int) -> ();
    pub fn XftCharSpecRender(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             chars: *const XftCharSpec, len: ::libc::c_int)
     -> ();
    pub fn XftGlyphFontSpecRender(dpy: *mut Display, op: ::libc::c_int,
                                  src: Picture, dst: Picture,
                                  srcx: ::libc::c_int, srcy: ::libc::c_int,
                                  glyphs: *const XftGlyphFontSpec,
                                  nglyphs: ::libc::c_int) -> ();
    pub fn XftCharFontSpecRender(dpy: *mut Display, op: ::libc::c_int,
                                 src: Picture, dst: Picture,
                                 srcx: ::libc::c_int, srcy: ::libc::c_int,
                                 chars: *const XftCharFontSpec,
                                 len: ::libc::c_int) -> ();
    pub fn XftTextRender8(dpy: *mut Display, op: ::libc::c_int, src: Picture,
                          _pub: *mut XftFont, dst: Picture,
                          srcx: ::libc::c_int, srcy: ::libc::c_int,
                          x: ::libc::c_int, y: ::libc::c_int,
                          string: *const FcChar8, len: ::libc::c_int) -> ();
    pub fn XftTextRender16(dpy: *mut Display, op: ::libc::c_int, src: Picture,
                           _pub: *mut XftFont, dst: Picture,
                           srcx: ::libc::c_int, srcy: ::libc::c_int,
                           x: ::libc::c_int, y: ::libc::c_int,
                           string: *const FcChar16, len: ::libc::c_int) -> ();
    pub fn XftTextRender16BE(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             x: ::libc::c_int, y: ::libc::c_int,
                             string: *const FcChar8, len: ::libc::c_int)
     -> ();
    pub fn XftTextRender16LE(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             x: ::libc::c_int, y: ::libc::c_int,
                             string: *const FcChar8, len: ::libc::c_int)
     -> ();
    pub fn XftTextRender32(dpy: *mut Display, op: ::libc::c_int, src: Picture,
                           _pub: *mut XftFont, dst: Picture,
                           srcx: ::libc::c_int, srcy: ::libc::c_int,
                           x: ::libc::c_int, y: ::libc::c_int,
                           string: *const FcChar32, len: ::libc::c_int) -> ();
    pub fn XftTextRender32BE(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             x: ::libc::c_int, y: ::libc::c_int,
                             string: *const FcChar8, len: ::libc::c_int)
     -> ();
    pub fn XftTextRender32LE(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             x: ::libc::c_int, y: ::libc::c_int,
                             string: *const FcChar8, len: ::libc::c_int)
     -> ();
    pub fn XftTextRenderUtf8(dpy: *mut Display, op: ::libc::c_int,
                             src: Picture, _pub: *mut XftFont, dst: Picture,
                             srcx: ::libc::c_int, srcy: ::libc::c_int,
                             x: ::libc::c_int, y: ::libc::c_int,
                             string: *const FcChar8, len: ::libc::c_int)
     -> ();
    pub fn XftTextRenderUtf16(dpy: *mut Display, op: ::libc::c_int,
                              src: Picture, _pub: *mut XftFont, dst: Picture,
                              srcx: ::libc::c_int, srcy: ::libc::c_int,
                              x: ::libc::c_int, y: ::libc::c_int,
                              string: *const FcChar8, endian: FcEndian,
                              len: ::libc::c_int) -> ();
    pub fn XftXlfdParse(xlfd_orig: *const ::libc::c_char,
                        ignore_scalable: ::libc::c_int,
                        complete: ::libc::c_int) -> *mut FcPattern;
}
